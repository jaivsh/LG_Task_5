{"ast":null,"code":"var _jsxFileName = \"/Users/bhoomishukla/myapp/src/RotatingImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firstImage from './s1.png';\nimport secondImage from './s2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingImage = () => {\n  _s();\n  const [isFirstAnimation, setIsFirstAnimation] = useState(true);\n  const [isSecondPhase, setIsSecondPhase] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsFirstAnimation(false);\n      setIsSecondPhase(true);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rotating-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '256px',\n        height: '256px',\n        position: 'relative',\n        animation: isSecondPhase ? 'rotateAndEnlarge 3s linear forwards' : 'rotateAndShrink 3s linear forwards'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n            @keyframes rotateAndShrink {\n              0% { \n                transform: rotate(0deg) scale(1); \n              }\n              100% { \n                transform: rotate(180deg) scale(0.5);\n              }\n            }\n            @keyframes rotateAndEnlarge {\n              0% { \n                transform: rotate(0deg) scale(0.5); \n              }\n              100% { \n                transform: rotate(180deg) scale(1);\n              }\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isFirstAnimation ? firstImage : secondImage,\n        alt: isFirstAnimation ? \"First state image\" : \"Second state image\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingImage, \"q/B7LriRi/DeqyCb5+cH93W27WU=\");\n_c = RotatingImage;\nexport default RotatingImage;\nvar _c;\n$RefreshReg$(_c, \"RotatingImage\");","map":{"version":3,"names":["React","useState","useEffect","firstImage","secondImage","jsxDEV","_jsxDEV","RotatingImage","_s","isFirstAnimation","setIsFirstAnimation","isSecondPhase","setIsSecondPhase","timer","setTimeout","clearTimeout","className","children","style","width","height","position","animation","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","objectFit","_c","$RefreshReg$"],"sources":["/Users/bhoomishukla/myapp/src/RotatingImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firstImage from './s1.png';\nimport secondImage from './s2.png';\n\nconst RotatingImage = () => {\n  const [isFirstAnimation, setIsFirstAnimation] = useState(true);\n  const [isSecondPhase, setIsSecondPhase] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsFirstAnimation(false);\n      setIsSecondPhase(true);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"rotating-container\">\n      <div \n        style={{\n          width: '256px',\n          height: '256px',\n          position: 'relative',\n          animation: isSecondPhase \n            ? 'rotateAndEnlarge 3s linear forwards'\n            : 'rotateAndShrink 3s linear forwards'\n        }}\n      >\n        <style>\n          {`\n            @keyframes rotateAndShrink {\n              0% { \n                transform: rotate(0deg) scale(1); \n              }\n              100% { \n                transform: rotate(180deg) scale(0.5);\n              }\n            }\n            @keyframes rotateAndEnlarge {\n              0% { \n                transform: rotate(0deg) scale(0.5); \n              }\n              100% { \n                transform: rotate(180deg) scale(1);\n              }\n            }\n          `}\n        </style>\n        <img\n          src={isFirstAnimation ? firstImage : secondImage}\n          alt={isFirstAnimation ? \"First state image\" : \"Second state image\"}\n          style={{\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RotatingImage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,UAAU;AACjC,OAAOC,WAAW,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BJ,mBAAmB,CAAC,KAAK,CAAC;MAC1BE,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKU,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCX,OAAA;MACEY,KAAK,EAAE;QACLC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,UAAU;QACpBC,SAAS,EAAEX,aAAa,GACpB,qCAAqC,GACrC;MACN,CAAE;MAAAM,QAAA,gBAEFX,OAAA;QAAAW,QAAA,EACG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACRpB,OAAA;QACEqB,GAAG,EAAElB,gBAAgB,GAAGN,UAAU,GAAGC,WAAY;QACjDwB,GAAG,EAAEnB,gBAAgB,GAAG,mBAAmB,GAAG,oBAAqB;QACnES,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdS,SAAS,EAAE;QACb;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzDID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA2DnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
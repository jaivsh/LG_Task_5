import React, { useState } from 'react';

const AnimatedLogo = () => {
  const [animate, setAnimate] = useState(false);

  return (
    <div className="relative w-full flex justify-center items-center p-4">
      <style>{`
        .anim-wrapper {
          position: relative;
          border: none;
          cursor: pointer;
          appearance: none;
          width: 200px;
          height: 200px;
          background: transparent;
          overflow: hidden;
        }
        
        .morph-bg {
          position: absolute;
          left: 0;
          top: 0;
          display: block;
          width: 100%;
          height: 100%;
          background: #4480f4;
          clip-path: path("M0 100C0 44.7715 44.7715 0 100 0C155.228 0 200 44.7715 200 100C200 155.228 155.228 200 100 200C44.7715 200 0 155.228 0 100Z");
          transform: scale(0);
          transition: transform 0.5s ease;
        }

        .morph-bg::before {
          content: '';
          position: absolute;
          top: 0;
          left: -100%;
          width: 100%;
          height: 100%;
          background: linear-gradient(90deg, transparent, #9f86e0, transparent);
          animation: none;
        }
        
        .anim-wrapper.play .morph-bg {
          transform: scale(1);
          animation: morphShape 10s linear infinite,
                     spinAnim 7s linear infinite;
        }

        .anim-wrapper.play .morph-bg::before {
          animation: glideEffect 2s linear infinite;
        }
        
        .logo-icon {
          position: absolute;
          left: 50%;
          top: 50%;
          width: 49.4%;
          height: 49.4%;
          transform: translate(-50%, -50%);
          transition: transform 1.2s ease, filter 0.6s ease;
          mix-blend-mode: plus-lighter;
          pointer-events: none;
        }
        
        .anim-wrapper.play .logo-icon {
          transform: translate(-50%, -50%) rotate(360deg);
          animation: glowEffect 4s infinite;
        }

        @keyframes glideEffect {
          0% { left: -100%; }
          100% { left: 200%; }
        }

        @keyframes morphShape {
          0% { clip-path: path("M0 100C0 44.7715 44.7715 0 100 0C155.228 0 200 44.7715 200 100C200 155.228 155.228 200 100 200C44.7715 200 0 155.228 0 100Z"); }
          25% { clip-path: path("M76.6164 9.82738C89.2955 -3.27579 110.704 -3.27579 123.384 9.82738C129.436 16.2037 138.097 19.7643 147.086 19.6578C165.322 19.4442 180.165 34.1498 179.954 52.2493L179.944 53.0914C179.84 61.7846 183.307 70.2112 189.55 76.3325L190.223 76.9916C203.015 89.5177 203.015 110.482 190.223 123.008L189.55 123.668C183.307 129.789 179.84 138.215 179.944 146.909L179.954 147.751C180.165 165.85 165.322 180.556 147.086 180.342C138.097 180.236 129.436 183.796 123.384 190.173C110.704 203.276 89.2955 203.276 76.6164 190.173C70.5642 183.796 61.9029 180.236 52.9142 180.342C34.6775 180.556 19.835 165.85 20.0456 147.751L20.0557 146.909C20.1597 138.215 16.6926 129.789 10.4497 123.668L9.77714 123.008C-3.01496 110.482 -3.01496 89.5177 9.77714 76.9916L10.4497 76.3325C16.6926 70.2112 20.1597 61.7846 20.0557 53.0914L20.0456 52.2493C19.835 34.1498 34.6775 19.4442 52.9142 19.6578C61.9029 19.7643 70.5642 16.2037 76.6164 9.82738Z"); }
          50% { clip-path: path("M32.8926 67.0473C32.8926 30.0243 62.917 0 99.9399 0C136.963 0 167.013 30.0243 167.013 67.0473V132.953C167.013 169.976 136.963 200 99.9399 200C62.917 200 32.8926 169.976 32.8926 132.953V67.0473Z"); }
          75% { clip-path: path("M83.6074 4.40154C93.7501 -1.46718 106.25 -1.46718 116.393 4.40154L174.571 37.959C184.714 43.8277 191.066 54.6751 191.066 66.4007V133.599C191.066 145.325 184.714 156.172 174.571 162.041L116.393 195.598C106.25 201.467 93.7501 201.467 83.6074 195.598L25.4292 162.041C15.2865 156.172 8.93359 145.325 8.93359 133.599V66.4007C8.93359 54.6751 15.2865 43.8277 25.4292 37.959L83.6074 4.40154Z"); }
          100% { clip-path: path("M0 100C0 44.7715 44.7715 0 100 0C155.228 0 200 44.7715 200 100C200 155.228 155.228 200 100 200C44.7715 200 0 155.228 0 100Z"); }
        }
        
        @keyframes spinAnim {
          0% { transform: rotate(0deg) scale(1); }
          100% { transform: rotate(360deg) scale(1); }
        }
        
        @keyframes glowEffect {
          0%, 100% { filter: brightness(1); }
          50% { filter: brightness(4); }
        }

        @media screen and (max-width: 480px) {
          .anim-wrapper {
            width: 180px;
            height: 180px;
          }
          
          .morph-bg {
            clip-path: path("M0 90C0 40.2944 40.2944 0 90 0C139.706 0 180 40.2944 180 90C180 139.706 139.706 180 90 180C40.2944 180 0 139.706 0 90Z");
          }

          @keyframes morphShape {
            0% { clip-path: path("M0 90C0 40.2944 40.2944 0 90 0C139.706 0 180 40.2944 180 90C180 139.706 139.706 180 90 180C40.2944 180 0 139.706 0 90Z"); }
            25% { clip-path: path("M68.9548 8.84464C80.366 -2.94821 99.634 -2.94821 111.045 8.84464C116.492 14.5833 124.287 17.7879 132.377 17.6921C148.79 17.4998 162.149 30.7348 161.959 47.0244L161.95 47.7823C161.856 55.6061 164.976 63.1901 170.595 68.6993L171.201 69.2924C182.714 80.5659 182.714 99.4341 171.201 110.708L170.595 111.301C164.976 116.81 161.856 124.394 161.95 132.218L161.959 132.976C162.149 149.265 148.79 162.5 132.377 162.308C124.287 162.212 116.492 165.417 111.045 171.155C99.634 182.948 80.366 182.948 68.9548 171.155C63.5078 165.417 55.7126 162.212 47.6228 162.308C31.2098 162.5 17.8515 149.265 18.041 132.976L18.0501 132.218C18.1437 124.394 15.0233 116.81 9.40473 111.301L8.79943 110.708C-2.71374 99.4341 -2.71374 80.5659 8.79943 69.2924L9.40473 68.6993C15.0233 63.1901 18.1437 55.6061 18.0501 47.7823L18.041 47.0244C17.8515 30.7348 31.2098 17.4998 47.6228 17.6921C55.7126 17.7879 63.5078 14.5833 68.9548 8.84464Z"); }
            50% { clip-path: path("M29.6033 60.3426C29.6033 27.0219 56.6253 0 89.9459 0C123.267 0 150.312 27.0219 150.312 60.3426V119.657C150.312 152.978 123.267 180 89.9459 180C56.6253 180 29.6033 152.978 29.6033 119.657V60.3426Z"); }
            75% { clip-path: path("M75.2467 3.96139C84.3751 -1.32046 95.6249 -1.32046 104.753 3.96139L157.114 34.1631C166.242 39.4449 171.959 49.2076 171.959 59.7606V120.239C171.959 130.792 166.242 140.555 157.114 145.837L104.753 176.039C95.6249 181.32 84.3751 181.32 75.2467 176.039L22.8863 145.837C13.7579 140.555 8.04023 130.792 8.04023 120.239V59.7606C8.04023 49.2076 13.7579 39.4449 22.8863 34.1631L75.2467 3.96139Z"); }
            100% { clip-path: path("M0 90C0 40.2944 40.2944 0 90 0C139.706 0 180 40.2944 180 90C180 139.706 139.706 180 90 180C40.2944 180 0 139.706 0 90Z"); }
          }
        }
      `}</style>

      <button 
        className={`anim-wrapper ${animate ? 'play' : ''}`}
        onMouseEnter={() => setAnimate(true)}
        onMouseLeave={() => setAnimate(false)}
        onTouchStart={() => setAnimate(true)}
        onTouchEnd={() => setAnimate(false)}
      >
        <span className="morph-bg"></span>
        <svg
          className="logo-icon"
          viewBox="0 0 213 215"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_49_57)">
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M211 106.944C153.415 105.102 107.265 57.9707 107.001 0H106.999C106.735 57.9707 60.5852 105.102 3 106.944V107.056C60.7507 108.903 107 156.301 107 214.5C107 214.667 107 214.833 106.999 215H107.001C107 214.833 107 214.667 107 214.5C107 156.301 153.249 108.903 211 107.056V106.944Z"
              fill="#3D3E3E"
            />
          </g>
          <defs>
            <clipPath id="clip0_49_57">
              <rect width="213" height="215" fill="white" />
            </clipPath>
          </defs>
        </svg>
      </button>
    </div>
  );
};

export default AnimatedLogo;
{"ast":null,"code":"var _jsxFileName = \"/Users/bhoomishukla/myapp/src/RotatingImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firstImage from './s1.png';\nimport secondImage from './s2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingImage = () => {\n  _s();\n  const [isFirstImage, setIsFirstImage] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsFirstImage(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Calculate points for regular polygons\n  const getPolygonPoints = (centerX, centerY, radius, sides) => {\n    const points = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = i * (360 / sides) * Math.PI / 180;\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n\n  // Generate circle points (approximating with many points)\n  const getCirclePoints = (centerX, centerY, radius) => {\n    return getPolygonPoints(centerX, centerY, radius, 40); // 40 points for smooth circle\n  };\n\n  // Points for different shapes\n  const squarePoints = '0,0 300,0 300,300 0,300';\n  const hexagonPoints = getPolygonPoints(150, 150, 150, 6);\n  const dodecagonPoints = getPolygonPoints(150, 150, 150, 12);\n  const circlePoints = getCirclePoints(150, 150, 150);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rotating-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '300px',\n        height: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '300px',\n          height: '300px',\n          animation: 'rotateShape 12s linear infinite'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"300\",\n          height: \"300\",\n          viewBox: \"0 0 300 300\",\n          children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n              id: \"shapeGradient\",\n              x1: \"0%\",\n              y1: \"0%\",\n              x2: \"100%\",\n              y2: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                offset: \"0%\",\n                className: \"gradient-start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                offset: \"100%\",\n                className: \"gradient-end\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n            className: \"morphing-shape\",\n            fill: \"url(#shapeGradient)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '256px',\n          height: '256px',\n          zIndex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '100%',\n            animation: isFirstImage ? 'rotateImageFirst 1s linear forwards' : 'rotateImageSecond 1s linear forwards'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isFirstImage ? firstImage : secondImage,\n            alt: isFirstImage ? \"First state\" : \"Second state\",\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .gradient-start {\n            animation: gradientStart 12s linear infinite;\n            stop-color: #0066ff;\n          }\n\n          .gradient-end {\n            animation: gradientEnd 12s linear infinite;\n            stop-color: #4d4dff;\n          }\n\n          @keyframes gradientStart {\n            0%, 25% { stop-color: #0066ff; }\n            25%, 50% { stop-color: #6600ff; }\n            50%, 75% { stop-color: #9933ff; }\n            75%, 100% { stop-color: #0066ff; }\n          }\n\n          @keyframes gradientEnd {\n            0%, 25% { stop-color: #4d4dff; }\n            25%, 50% { stop-color: #8000ff; }\n            50%, 75% { stop-color: #b366ff; }\n            75%, 100% { stop-color: #4d4dff; }\n          }\n\n          .morphing-shape {\n            animation: morphShapes 12s linear infinite;\n          }\n\n          @keyframes morphShapes {\n            0%, 20% { \n              points: ${squarePoints};\n            }\n            25%, 45% { \n              points: ${hexagonPoints};\n            }\n            50%, 70% { \n              points: ${dodecagonPoints};\n            }\n            75%, 95% { \n              points: ${circlePoints};\n            }\n            100% {\n              points: ${squarePoints};\n            }\n          }\n\n          @keyframes rotateShape {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(360deg); }\n          }\n\n          @keyframes rotateImageFirst {\n            0% { transform: rotate(0deg) scale(1); }\n            100% { transform: rotate(180deg) scale(0.5); }\n          }\n\n          @keyframes rotateImageSecond {\n            0% { transform: rotate(0deg) scale(0.5); }\n            100% { transform: rotate(180deg) scale(1); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingImage, \"8P6DFlsV4aYnEIuEKq+HdFQSgNo=\");\n_c = RotatingImage;\nexport default RotatingImage;\nvar _c;\n$RefreshReg$(_c, \"RotatingImage\");","map":{"version":3,"names":["React","useState","useEffect","firstImage","secondImage","jsxDEV","_jsxDEV","RotatingImage","_s","isFirstImage","setIsFirstImage","timer","setTimeout","clearTimeout","getPolygonPoints","centerX","centerY","radius","sides","points","i","angle","Math","PI","x","cos","y","sin","push","join","getCirclePoints","squarePoints","hexagonPoints","dodecagonPoints","circlePoints","className","children","style","position","width","height","top","left","animation","viewBox","id","x1","y1","x2","y2","offset","fileName","_jsxFileName","lineNumber","columnNumber","fill","transform","zIndex","src","alt","objectFit","_c","$RefreshReg$"],"sources":["/Users/bhoomishukla/myapp/src/RotatingImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firstImage from './s1.png';\nimport secondImage from './s2.png';\n\nconst RotatingImage = () => {\n  const [isFirstImage, setIsFirstImage] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsFirstImage(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Calculate points for regular polygons\n  const getPolygonPoints = (centerX, centerY, radius, sides) => {\n    const points = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = (i * (360 / sides)) * Math.PI / 180;\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n\n  // Generate circle points (approximating with many points)\n  const getCirclePoints = (centerX, centerY, radius) => {\n    return getPolygonPoints(centerX, centerY, radius, 40); // 40 points for smooth circle\n  };\n\n  // Points for different shapes\n  const squarePoints = '0,0 300,0 300,300 0,300';\n  const hexagonPoints = getPolygonPoints(150, 150, 150, 6);\n  const dodecagonPoints = getPolygonPoints(150, 150, 150, 12);\n  const circlePoints = getCirclePoints(150, 150, 150);\n\n  return (\n    <div className=\"rotating-container\">\n      <div style={{ position: 'relative', width: '300px', height: '300px' }}>\n        {/* Shape container */}\n        <div style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '300px',\n          height: '300px',\n          animation: 'rotateShape 12s linear infinite'\n        }}>\n          <svg width=\"300\" height=\"300\" viewBox=\"0 0 300 300\">\n            <defs>\n              <linearGradient id=\"shapeGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                <stop offset=\"0%\" className=\"gradient-start\" />\n                <stop offset=\"100%\" className=\"gradient-end\" />\n              </linearGradient>\n            </defs>\n            <polygon \n              className=\"morphing-shape\"\n              fill=\"url(#shapeGradient)\"\n            />\n          </svg>\n        </div>\n\n        {/* Image container centered */}\n        <div \n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: '256px',\n            height: '256px',\n            zIndex: 1\n          }}\n        >\n          <div style={{\n            width: '100%',\n            height: '100%',\n            animation: isFirstImage \n              ? 'rotateImageFirst 1s linear forwards'\n              : 'rotateImageSecond 1s linear forwards'\n          }}>\n            <img\n              src={isFirstImage ? firstImage : secondImage}\n              alt={isFirstImage ? \"First state\" : \"Second state\"}\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      \n      <style>\n        {`\n          .gradient-start {\n            animation: gradientStart 12s linear infinite;\n            stop-color: #0066ff;\n          }\n\n          .gradient-end {\n            animation: gradientEnd 12s linear infinite;\n            stop-color: #4d4dff;\n          }\n\n          @keyframes gradientStart {\n            0%, 25% { stop-color: #0066ff; }\n            25%, 50% { stop-color: #6600ff; }\n            50%, 75% { stop-color: #9933ff; }\n            75%, 100% { stop-color: #0066ff; }\n          }\n\n          @keyframes gradientEnd {\n            0%, 25% { stop-color: #4d4dff; }\n            25%, 50% { stop-color: #8000ff; }\n            50%, 75% { stop-color: #b366ff; }\n            75%, 100% { stop-color: #4d4dff; }\n          }\n\n          .morphing-shape {\n            animation: morphShapes 12s linear infinite;\n          }\n\n          @keyframes morphShapes {\n            0%, 20% { \n              points: ${squarePoints};\n            }\n            25%, 45% { \n              points: ${hexagonPoints};\n            }\n            50%, 70% { \n              points: ${dodecagonPoints};\n            }\n            75%, 95% { \n              points: ${circlePoints};\n            }\n            100% {\n              points: ${squarePoints};\n            }\n          }\n\n          @keyframes rotateShape {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(360deg); }\n          }\n\n          @keyframes rotateImageFirst {\n            0% { transform: rotate(0deg) scale(1); }\n            100% { transform: rotate(180deg) scale(0.5); }\n          }\n\n          @keyframes rotateImageSecond {\n            0% { transform: rotate(0deg) scale(0.5); }\n            100% { transform: rotate(180deg) scale(1); }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default RotatingImage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhoomishukla/myapp/src/RotatingImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firstImage from './s1.png';\nimport secondImage from './s2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RotatingImage = () => {\n  _s();\n  const [isFirstImage, setIsFirstImage] = useState(true);\n  const [showPolygon, setShowPolygon] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsFirstImage(false);\n    }, 1000);\n    const polygonTimer = setTimeout(() => {\n      setShowPolygon(true);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(polygonTimer);\n    };\n  }, []);\n\n  // Calculate points for a regular dodecagon\n  const getPolygonPoints = (centerX, centerY, radius) => {\n    const points = [];\n    for (let i = 0; i < 12; i++) {\n      const angle = i * 30 * Math.PI / 180; // 360/12 = 30 degrees\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rotating-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '300px',\n        height: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '300px',\n          height: '300px',\n          backgroundColor: '#0066ff',\n          animation: 'rotateBackground 3s linear forwards'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), showPolygon && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '300px',\n          height: '300px',\n          animation: 'rotatePolygon 2s linear forwards'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"300\",\n          height: \"300\",\n          viewBox: \"0 0 300 300\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: getPolygonPoints(150, 150, 150),\n            fill: \"#0066ff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '256px',\n          height: '256px',\n          zIndex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '100%',\n            animation: isFirstImage ? 'rotateImageFirst 1s linear forwards' : 'rotateImageSecond 1s linear forwards'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isFirstImage ? firstImage : secondImage,\n            alt: isFirstImage ? \"First state\" : \"Second state\",\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes rotateBackground {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(30deg); }\n          }\n\n          @keyframes rotatePolygon {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(30deg); }\n          }\n\n          @keyframes rotateImageFirst {\n            0% { transform: rotate(0deg) scale(1); }\n            100% { transform: rotate(180deg) scale(0.5); }\n          }\n\n          @keyframes rotateImageSecond {\n            0% { transform: rotate(0deg) scale(0.5); }\n            100% { transform: rotate(180deg) scale(1); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(RotatingImage, \"E54uZdHgCY1nMnvb3QTT0gGY8dE=\");\n_c = RotatingImage;\nexport default RotatingImage;\nvar _c;\n$RefreshReg$(_c, \"RotatingImage\");","map":{"version":3,"names":["React","useState","useEffect","firstImage","secondImage","jsxDEV","_jsxDEV","RotatingImage","_s","isFirstImage","setIsFirstImage","showPolygon","setShowPolygon","timer","setTimeout","polygonTimer","clearTimeout","getPolygonPoints","centerX","centerY","radius","points","i","angle","Math","PI","x","cos","y","sin","push","join","className","children","style","position","width","height","top","left","backgroundColor","animation","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","fill","transform","zIndex","src","alt","objectFit","_c","$RefreshReg$"],"sources":["/Users/bhoomishukla/myapp/src/RotatingImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firstImage from './s1.png';\nimport secondImage from './s2.png';\n\nconst RotatingImage = () => {\n  const [isFirstImage, setIsFirstImage] = useState(true);\n  const [showPolygon, setShowPolygon] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsFirstImage(false);\n    }, 1000);\n\n    const polygonTimer = setTimeout(() => {\n      setShowPolygon(true);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n      clearTimeout(polygonTimer);\n    };\n  }, []);\n\n  // Calculate points for a regular dodecagon\n  const getPolygonPoints = (centerX, centerY, radius) => {\n    const points = [];\n    for (let i = 0; i < 12; i++) {\n      const angle = (i * 30) * Math.PI / 180; // 360/12 = 30 degrees\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n\n  return (\n    <div className=\"rotating-container\">\n      {/* Outer container for positioning */}\n      <div style={{ position: 'relative', width: '300px', height: '300px' }}>\n        {/* Blue square with continuous rotation */}\n        <div style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '300px',\n          height: '300px',\n          backgroundColor: '#0066ff',\n          animation: 'rotateBackground 3s linear forwards'\n        }} />\n\n        {/* 12-sided polygon */}\n        {showPolygon && (\n          <div style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '300px',\n            height: '300px',\n            animation: 'rotatePolygon 2s linear forwards'\n          }}>\n            <svg width=\"300\" height=\"300\" viewBox=\"0 0 300 300\">\n              <polygon \n                points={getPolygonPoints(150, 150, 150)}\n                fill=\"#0066ff\"\n              />\n            </svg>\n          </div>\n        )}\n\n        {/* Image container centered */}\n        <div \n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: '256px',\n            height: '256px',\n            zIndex: 1\n          }}\n        >\n          <div style={{\n            width: '100%',\n            height: '100%',\n            animation: isFirstImage \n              ? 'rotateImageFirst 1s linear forwards'\n              : 'rotateImageSecond 1s linear forwards'\n          }}>\n            <img\n              src={isFirstImage ? firstImage : secondImage}\n              alt={isFirstImage ? \"First state\" : \"Second state\"}\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      \n      <style>\n        {`\n          @keyframes rotateBackground {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(30deg); }\n          }\n\n          @keyframes rotatePolygon {\n            from { transform: rotate(0deg); }\n            to { transform: rotate(30deg); }\n          }\n\n          @keyframes rotateImageFirst {\n            0% { transform: rotate(0deg) scale(1); }\n            100% { transform: rotate(180deg) scale(0.5); }\n          }\n\n          @keyframes rotateImageSecond {\n            0% { transform: rotate(0deg) scale(0.5); }\n            100% { transform: rotate(180deg) scale(1); }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default RotatingImage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}